plugins {
    id 'org.springframework.boot' version '2.3.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id "org.openapi.generator" version "4.3.1"
    id "org.asciidoctor.jvm.convert" version "3.2.0"
    id "org.springframework.cloud.contract" version "2.2.3.RELEASE"
    id 'jacoco'
    id 'ru.uip.contract.specs' version '0.1'
}

group 'ru.uip'
version '1.0-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-reactor-netty'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation "ru.uip:model:1.0-SNAPSHOT"

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.cloud:spring-cloud-starter-contract-verifier'
    testImplementation "io.rest-assured:spring-web-test-client:4.3.0"
    testImplementation "io.rest-assured:rest-assured-all:4.3.0"
    testImplementation "org.springframework.restdocs:spring-restdocs-restassured"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-contract-dependencies:2.1.3.RELEASE"
    }
}


openApiGenerate {
    generatorName = "asciidoc"
    inputSpec = "$projectDir/src/main/api/api.yaml".toString()
    templateDir = "$projectDir/src/main/api/template".toString()
    outputDir = "$buildDir/generated-docs".toString()
    configOptions = [
            specDir: "$projectDir/src/main/api/template".toString(),
            snippetDir: "$projectDir/src/main/api/template".toString()
    ]
}

asciidoctor {
    sourceDir  file("${buildDir}/generated-docs")
    outputDir  file('build/docs')
}

contracts {
    baseClassForTests = 'ru.uip.BaseTest'
    testMode = 'EXPLICIT'
    testFramework = 'JUNIT5'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: 'ru/uip/Application.class')
        }))
    }
}

apiContractSpec {
    apiSpec = "$projectDir/src/main/api/api.yaml"
    operationContracts = [
            'GetAccounts': files(
                    "${projectDir}/src/test/resources/contracts/getAccounts.yml"
            ),
            'DeleteAccount': files(
                    "${projectDir}/src/test/resources/contracts/deleteAccount.yml"
            ),
            'CreateOrUpdateAccount': files(
                    "${projectDir}/src/test/resources/contracts/updateAccounts.yml"
            ),
            'FindAccountById': files(
                    "${projectDir}/src/test/resources/contracts/createAccounts.yml"
            )
    ]
    outputDir = "${buildDir}/generated-snippets/contract-description/"
}

build.dependsOn("asciidoctor")
asciidoctor.dependsOn("generate-api-spec")
asciidoctor.dependsOn("openApiGenerate")

